// обработка захардкожена

// Возвращает сведения о внешней обработке.
Функция СведенияОВнешнейОбработке() Экспорт
	
	ПараметрыРегистрации = СкидкиНаценкиСервер.ПараметрыРегистрацииВнешнейОбработкиСкидкиНаценки(
		НСтр("ru = 'Скидка 01.06.2023 TYBeanie'"),
		НСтр("ru = 'Скидка 01.06.2023 TYBeanie'"));
	ПараметрыРегистрации.БезопасныйРежим = Ложь;
	Возврат ПараметрыРегистрации;
	
КонецФункции

// Возвращает способ применения скидки (наценки)
//
// Возвращаемое значение:
//	Перечисления.СпособыПримененияСкидокНаценок - способ применения скидки (наценки)
//
Функция СпособПрименения() Экспорт
	
	Возврат Неопределено;
	
КонецФункции

// Возвращает заголовок условия предоставления с учетом настроек
//
// Параметры:
//	Настройки - Структура - Значения настроек условия предоставления
//
// Возвращаемое значение:
//	Строка - Наименование условия
//
Функция Автонаименование(Настройки) Экспорт
	
	Возврат НСтр("ru = 'Скидка 01.06.2023 TYBeanie'");
	
КонецФункции

// Возвращает имя формы внешней обработки,
// предназначенной для настройки условия предоставления 
//
// Возвращаемое значение:
//	Строка - Имя формы
//
Функция ИмяФормыНастроек() Экспорт
	
	Возврат "Настройки";
	
КонецФункции


// Возвращает расширенное описание условия предоставления с учетом настроек
//
// Параметры:
//	Настройки - Структура - Значения настроек условия предоставления
//
// Возвращаемое значение:
//	Строка - Расширенное описание
//
Функция ОписаниеДействия(Настройки) Экспорт
	
	Попытка
		Если Настройки <> Неопределено Тогда
			Описание = НСтр("ru = 'Скидка 01.06.2023 TYBeanie'");
		Иначе
			Описание = НСтр("ru = 'Не заданы настройки скидки'");
		КонецЕсли;
	Исключение
		Описание = НСтр("ru = 'Настройки не загружены.
		           |При загрузке настроек скидки произошла ошибка:
		           |'") + ОписаниеОшибки();
	КонецПопытки;
	
	Возврат Описание;
	
КонецФункции


// Выполняет расчет скидки (наценки)
//
// Параметры:
//	СкидкаНаценка - Строка дерева скидок (наценок). Включает результаты проверки условий, способы совместного применения
//	Настройки - Структура - Настройки, заданные пользователем в форме настроек внешней обработки
//	Товары - Коллекция товаров, для которых требуется применить скидку (наценку)
//	ПараметрыРасчета - Структура - Параметры расчета скидок (наценок)
//
// Возвращаемое значение:
//	РезультатРасчета - ТаблицаЗначений - результат расчета
//
Функция Рассчитать(СтрокаДереваСкидок, ПараметрыВнешнейОбработки, ПараметрыРасчета) Экспорт
	
	//Адрес = "\\tntapp5\hran\test\ПрочиеОбработки\СкидкаTYBeanie01_06_2023.epf";
	//обр = ВнешниеОбработки.Создать(Адрес, БезопасныйРежим());
	//обр.Рассчитать(СтрокаДереваСкидок, ПараметрыВнешнейОбработки, ПараметрыРасчета);
	//Возврат Неопределено;
	
	РезультатРасчета = Новый Структура;
	
	ТаблицаСкидок = СкидкиНаценкиСервер.ПустаяТаблицаСкидок();
	ТаблицаПодарков = СкидкиНаценкиСервер.ПустаяТаблицаПодарков();
	// 3 условие 	
	МассивАкциозныхТоваров = Новый СписокЗначений;
	МассивАкциозныхТоваров.Добавить("10945163");
	МассивАкциозныхТоваров.Добавить("530283032");
	МассивАкциозныхТоваров.Добавить("10975971");
	МассивАкциозныхТоваров.Добавить("530303767");
	МассивАкциозныхТоваров.Добавить("530301517");
	МассивАкциозныхТоваров.Добавить("530301518");
	МассивАкциозныхТоваров.Добавить("530303167");
	МассивАкциозныхТоваров.Добавить("530300325");
	МассивАкциозныхТоваров.Добавить("530301964");
	МассивАкциозныхТоваров.Добавить("530301962");
	МассивАкциозныхТоваров.Добавить("530303175");
	МассивАкциозныхТоваров.Добавить("530303176");
	МассивАкциозныхТоваров.Добавить("530303873");
	МассивАкциозныхТоваров.Добавить("530303870");
	МассивАкциозныхТоваров.Добавить("530303868");
	МассивАкциозныхТоваров.Добавить("530303867");
	МассивАкциозныхТоваров.Добавить("530304753");
	МассивАкциозныхТоваров.Добавить("530303866");
	МассивАкциозныхТоваров.Добавить("530303870");
	МассивАкциозныхТоваров.Добавить("530294329");
	МассивАкциозныхТоваров.Добавить("530297933");
	МассивАкциозныхТоваров.Добавить("10959993");
	МассивАкциозныхТоваров.Добавить("10975972");
	МассивАкциозныхТоваров.Добавить("10943781");
	МассивАкциозныхТоваров.Добавить("10961830");
	МассивАкциозныхТоваров.Добавить("530282726");
	МассивАкциозныхТоваров.Добавить("10970923");
	МассивАкциозныхТоваров.Добавить("530288452");
	МассивАкциозныхТоваров.Добавить("530282498");
	МассивАкциозныхТоваров.Добавить("530288441");
	МассивАкциозныхТоваров.Добавить("10975970");
	МассивАкциозныхТоваров.Добавить("530296284");
	МассивАкциозныхТоваров.Добавить("530296282");
	МассивАкциозныхТоваров.Добавить("10969652");
	МассивАкциозныхТоваров.Добавить("530296286");
	МассивАкциозныхТоваров.Добавить("530282728");
	МассивАкциозныхТоваров.Добавить("10969656");
	МассивАкциозныхТоваров.Добавить("530294328");
	МассивАкциозныхТоваров.Добавить("10975972");
	МассивАкциозныхТоваров.Добавить("10945156");
	
	РезультатРасчета.Вставить("ТаблицаСкидок", ТаблицаСкидок);
	РезультатРасчета.Вставить("ТаблицаПодарков", ТаблицаПодарков);
	ВсеТовары = ПараметрыРасчета.Товары;
	ВсеТоварыСЗ = Новый СписокЗначений;
	ВсеТоварыСЗ.ЗагрузитьЗначения(ВсеТовары.ВыгрузитьКолонку("Номенклатура"));
		
	//ЗапросТест1 = Новый Запрос;
	//ЗапросТест1.Текст = "ВЫБРАТЬ
	//|	Номенклатура.Ссылка КАК Ссылка,
	//|	Номенклатура.Наименование КАК Наименование,
	//|	Номенклатура.Артикул КАК Артикул
	//|ИЗ
	//|	Справочник.Номенклатура КАК Номенклатура
	//|ГДЕ
	//|	Номенклатура.Ссылка В ИЕРАРХИИ (&ВсеТовары)
	//|";
	//ЗапросТест1.УстановитьПараметр("ВсеТовары", ВсеТоварыСЗ);
	//
	//РезТест1 = ЗапросТест1.Выполнить().Выгрузить();
	//

	//ЗапросТест2 = Новый Запрос;
	//ЗапросТест3 = Новый Запрос;
	//ЗапросТест4 = Новый Запрос;
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("МассивАкциозныхТоваров", МассивАкциозныхТоваров);
	Запрос.УстановитьПараметр("ВсеТовары", ВсеТовары);
	Запрос.УстановитьПараметр("ВсеТоварыСЗ", ВсеТоварыСЗ);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Номенклатура.Ссылка КАК Ссылка,
	|	Номенклатура.Наименование КАК Наименование,
	|	Номенклатура.Артикул КАК Артикул
	|ПОМЕСТИТЬ НоменклатураБаза
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	Номенклатура.Ссылка В ИЕРАРХИИ (&ВсеТоварыСЗ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.КлючСвязи КАК КлючСвязи,
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.Количество КАК Количество,
	|	Товары.Сумма КАК Сумма
	|ПОМЕСТИТЬ ТоварыДокумента
	|ИЗ
	|	&ВсеТовары КАК Товары
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыДокумента.КлючСвязи КАК КлючСвязи,
	|	ТоварыДокумента.Номенклатура КАК Номенклатура,
	|	НоменклатураБаза.Артикул КАК Артикул,
	|	ТоварыДокумента.Характеристика КАК Характеристика,
	|	ТоварыДокумента.Количество КАК Количество,
	|	ТоварыДокумента.Сумма КАК Сумма,
	|	НоменклатураБаза.Артикул В ИЕРАРХИИ (&МассивАкциозныхТоваров) КАК АкциозныйТовар
	|ИЗ
	|	ТоварыДокумента КАК ТоварыДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ НоменклатураБаза КАК НоменклатураБаза
	|		ПО ТоварыДокумента.Номенклатура = НоменклатураБаза.Ссылка";
	
	ТЗ = Запрос.Выполнить().Выгрузить();
	// 4 условие
	КолвоСкидочныхТоваровНеАкц = ОпределитьКолвоСкидТоваровНеАкц(ТЗ);
	Для каждого СтрокаТЗ Из ТЗ Цикл 
		Если СтрокаТЗ.АкциозныйТовар И КолвоСкидочныхТоваровНеАкц <> 0 Тогда 
			НоваяСтрока = ТаблицаСкидок.Добавить();
			НоваяСтрока.СкидкаНаценка = СтрокаДереваСкидок.СкидкаНаценка;
			НоваяСтрока.СпособПредоставления = Перечисления.СпособыПредоставленияСкидокНаценок.ВнешняяОбработка;
			НоваяСтрока.РеквизитДопУпорядочивания = СтрокаДереваСкидок.РеквизитДопУпорядочивания;
			НоваяСтрока.КлючСвязи = СтрокаТЗ.КлючСвязи;
			НоваяСтрока.Сумма = СтрокаТЗ.Сумма - 499;
			НоваяСтрока.СуммаВсехСкидок = НоваяСтрока.Сумма;
			КолвоСкидочныхТоваровНеАкц = КолвоСкидочныхТоваровНеАкц - 1;
		КонецЕсли;
	КонецЦикла;
	
	Возврат РезультатРасчета;
	
КонецФункции 

Функция ОпределитьКолвоСкидТоваровНеАкц(ТЗ)
	 
	// 1 и 2 условие
	//КолвоНеакциозныхТоваров = 0;
	СуммаНеакциозныхТоваров = 0;
	Для каждого СтрокаТЗ Из ТЗ Цикл
		Если НЕ СтрокаТЗ.АкциозныйТовар Тогда
			//КолвоНеакциозныхТоваров = КолвоНеакциозныхТоваров + 1;
			СуммаНеакциозныхТоваров = СуммаНеакциозныхТоваров + СтрокаТЗ.Сумма;
		КонецЕсли; 			
	КонецЦикла; 		
	КолвоСкидочныхТоваров = Цел(СуммаНеакциозныхТоваров / 1500);
	Возврат КолвоСкидочныхТоваров;
КонецФункции // ()
 
 